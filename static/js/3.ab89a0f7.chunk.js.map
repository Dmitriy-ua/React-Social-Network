{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","onDoubleClick","style","minHeight","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","photos","large","alt","fullName","aboutMe","Preloader","Post","classes","post_item","likesCount","message","maxLength30","maxLengthCreator","AddNewPostForm","posts_form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","reduxForm","form","MyPosts","React","memo","postsElements","posts","reverse","map","post","index","key","my_posts__wrapper","my_posts__title","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content_wrapper","ProfileContainer","userId","this","match","params","currUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ab89a0f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"Profile_content_wrapper__2OFw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts__wrapper\":\"MyPosts_my_posts__wrapper__3Kcjp\",\"my_posts__title\":\"MyPosts_my_posts__title__2m-X8\",\"posts_form\":\"MyPosts_posts_form__1KrI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_item\":\"Post_post_item__1CcPI\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode( false  );\r\n        props.updateStatus( status );\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div className='profileStatus'>\r\n                <p onDoubleClick={ activateEditMode } style={{minHeight: '20px'}}>{props.status}</p>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}  onBlur={ deactivateEditMode } value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status }) => {\r\n\r\n    if(!profile ) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className='app-content'>\r\n            <div>\r\n                <img src={profile.photos.large } alt=\"\"/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <hr/>\r\n            </div>\r\n\r\n            <h3> {profile.fullName } </h3>\r\n            <p>{profile.aboutMe}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post_item}>\r\n            <div className='r' >\r\n                <img src={\"https://loremflickr.com/70/70/girl\"+props.likesCount} />\r\n                &nbsp;{props.message}\r\n                <br/> You have {props.likesCount} likes!\r\n            </div>\r\n            <br/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form className={classes.posts_form} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" placeholder={'Type your post'}\r\n                       validate={[required, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <button>Post</button>\r\n            </div>\r\n            <br/>\r\n\r\n        </form>\r\n    )\r\n}\r\nAddNewPostForm = reduxForm( { form: \"ProfileAddNewPostForm\"} ) (AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // shouldComponentUpdate(nextProps, nextState, nextContext) { //for object component only\r\n    //     return nextProps != this.props || nextState != this.state;\r\n    // }\r\n    let postsElements =\r\n        [...props.posts]\r\n        .reverse()\r\n        .map((post, index) =>\r\n        <Post key={index} message={post.message} likesCount={post.likesCount}/>);\r\n\r\n    // let newPostElement = React.createRef();\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.my_posts__wrapper}>\r\n            <h2 className={classes.my_posts__title}>\r\n                View My Posts\r\n            </h2>\r\n\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n\r\n            {postsElements}\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/* Provide presentational component with certain props */\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n/* Provide presentational component with dispatching methods */\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch( addPostActionCreator(newPostText) );\r\n        }\r\n    }\r\n}\r\n\r\n/* Create Container component for presentational component */\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport classes from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if( !props.profile ) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content_wrapper}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if ( !userId ) {\r\n            userId = this.props.currUserId;\r\n            if( !userId ) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    currUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose (\r\n    connect(mapStateToProps , { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n) (ProfileContainer);"],"sourceRoot":""}