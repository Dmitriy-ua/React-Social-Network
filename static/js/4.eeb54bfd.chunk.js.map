{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Messages/Messages.js","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","classes","dialogs__item","to","id","key","name","Messages","messages__item","message","maxlength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","pleceholder","Dialogs","state","dialogsPage","dialogElements","dialogs","map","dialog","index","messageElements","messages","isAuth","left_cell","dialogs__list","right_cell","messages__list","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,WAAa,4BAA4B,cAAgB,+BAA+B,cAAgB,+BAA+B,eAAiB,gCAAgC,eAAiB,kC,+FCWtRC,EARI,SAACC,GAChB,OACI,wBAAIC,UAAWC,IAAQC,eACnB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,IAAKN,EAAMK,IAAKL,EAAMO,QCGxDC,EAPE,SAACR,GAEd,OACI,wBAAIC,UAAWC,IAAQO,eAAgBH,IAAKN,EAAMK,IAAlD,IAAwDL,EAAMU,QAA9D,M,wCCDJC,EAAcC,YAAiB,IAepBC,cAAW,CAACC,KAAM,wBAAlBD,EAbQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBJ,KAAK,iBAAiBe,YAAY,wBAE7C,+BAAI,6CCyBDC,EAjCC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAiBF,EAAMG,QAAQC,KAAK,SAACC,EAAQC,GAAT,OACpC,kBAAC,EAAD,CAAYvB,KAAMsB,EAAOtB,KAAMF,GAAIwB,EAAOxB,GAAIC,IAAKwB,OAEnDC,EAAkBP,EAAMQ,SAASJ,KAAK,SAAClB,EAASoB,GAAV,OACtC,kBAAC,EAAD,CAAUpB,QAASA,EAAQA,QAASL,GAAIK,EAAQL,GAAIC,IAAKwB,OAM7D,OAAK9B,EAAMiC,OAGP,0BAAMhC,UAAWC,IAAQyB,SACrB,yBAAK1B,UAAWC,IAAQgC,WACpB,wBAAIjC,UAAWC,IAAQiC,eAClBT,IAGT,yBAAKzB,UAAWC,IAAQkC,YACpB,wBAAInC,UAAWC,IAAQmC,gBAClBN,GAEN,kBAAC,EAAD,CAAgBhB,SAjBP,SAACuB,GACjBtC,EAAMuC,YAAYD,EAAOE,qBAGF,kBAAC,IAAD,CAAUpC,GAAG,Y,wCCjBxCqC,EAA6B,SAACjB,GAAD,MAAY,CACzCS,OAAQT,EAAMkB,KAAKT,S,OCmBRU,sBACXC,aAjBkB,SAACpB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBQ,OAAQT,EAAMkB,KAAKT,WAIF,SAACY,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAAUC,YAAmBN,UDVT,SAACO,GAAe,IAEtCC,EAFqC,uKAInC,OAAMC,KAAKjD,MAAMiC,OAEV,kBAACc,EAAcE,KAAKjD,OAFK,kBAAC,IAAD,CAAUI,GAAG,eAJV,GAEX8C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAqCI,KCM/DL,CAGbpB","file":"static/js/4.eeb54bfd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2EKDb\",\"left_cell\":\"Dialogs_left_cell__1639N\",\"right_cell\":\"Dialogs_right_cell__1jQ6g\",\"dialogs__list\":\"Dialogs_dialogs__list__11ICU\",\"dialogs__item\":\"Dialogs_dialogs__item__3_IIM\",\"messages__list\":\"Dialogs_messages__list__3X2MZ\",\"messages__item\":\"Dialogs_messages__item__1DBsP\"};","import classes from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <li className={classes.dialogs__item}>\r\n            <NavLink to={'/dialogs/' + props.id} key={props.id}>{props.name}</NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import classes from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    return (\r\n        <li className={classes.messages__item} key={props.id}> {props.message} </li>\r\n    );\r\n}\r\n\r\nexport default Messages;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nlet maxlength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxlength50]}\r\n                       name=\"newMessageBody\" pleceholder=\"Enter your message\" />\r\n            </div>\r\n            <p> <button>Send</button></p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm( {form: \"dialogAddMessageForm\"}) (AddMessageForm);\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogs.map( (dialog, index) =>\r\n        <DialogItem name={dialog.name} id={dialog.id} key={index}/>);\r\n\r\n    let messageElements = state.messages.map( (message, index) =>\r\n        <Messages message={message.message} id={message.id} key={index}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if( !props.isAuth ) return <Redirect to='/login'/>;\r\n\r\n    return (\r\n        <main className={classes.dialogs}>\r\n            <div className={classes.left_cell}>\r\n                <ul className={classes.dialogs__list}>\r\n                    {dialogElements}\r\n                </ul>\r\n            </div>\r\n            <div className={classes.right_cell}>\r\n                <ul className={classes.messages__list}>\r\n                    {messageElements}\r\n                </ul>\r\n               <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </main>\r\n    );\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if ( !this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch( sendMessageCreator(newMessageBody) );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}