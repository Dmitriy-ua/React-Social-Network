{"version":3,"sources":["components/Sidebar/Sidebar.module.css","api/api.js","redux/dialogsReducer.js","components/Users/Users.module.css","assets/images/user-icon.png","assets/images/preloader-colorfull.svg","components/common/Preloader/Preloader.jsx","serviceWorker.js","components/Sidebar/Sidebar.jsx","utils/object-helpers.js","redux/usersReducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.js","components/Users/Users.js","redux/usersSelectors.js","components/Users/UsersContainer.js","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/appReducer.js","redux/sidebarReducer.js","redux/reduxStore.js","App.js","hoc/withSuspense.js","index.js","components/common/FormControls/FormControls.js","components/Header/Header.module.css","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","redux/profileReducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","newMessage","length","Preloader","style","position","left","top","src","preloader","alt","Boolean","window","location","hostname","match","Sidebar","className","classes","sidebar","sidebar__list","sidebar__list_item","to","sidebar__link","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","index","key","cn","selectedPage","pageLink","e","User","user","photos","small","userPhoto","usersPhoto","disabled","some","Users","props","createSelector","usersPage","getUsersSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","React","Component","connect","bind","page","totalCount","Header","header","header__row","header__logo","header__title","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","CreateField","required","Input","formSummeryError","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","DialogsContainer","lazy","ProfileContainer","GamesPage","allowTransparency","width","height","frameBorder","scrolling","allowFullScreen","App","initializeApp","path","render","Suspense","fallback","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formGroup","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.7842ccbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2WZKK\",\"sidebar__list\":\"Sidebar_sidebar__list__222BR\",\"sidebar__list_item\":\"Sidebar_sidebar__list_item__wTlgE\",\"sidebar__link\":\"Sidebar_sidebar__link__1mU7-\",\"activeLink\":\"Sidebar_activeLink__triUS\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '2e4d1a37-98f2-4af6-8745-ad2694696f6e',\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage=1, pageSize=10) {\r\n        return instance.get( `users?page=${currentPage}&count=${pageSize}`, {\r\n            withCredentials: true,\r\n        }).then( response => { return response.data; })\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object instead ')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        if(userId == null) userId = 8018;\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n\r\n    getStatus(userId) {\r\n        if(userId == null) userId = 8018;\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status });\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login ( email, password, rememberMe = false ) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","\r\n/* Action Types */\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dmitriy'},\r\n        {id: 2, name: 'Valera'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Lena'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'What\\'s up'},\r\n        {id: 3, message: 'Pretty good'},\r\n        {id: 4, message: 'Great'},\r\n    ],\r\n    // newMessageBody:''\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: state.messages[state.messages.length - 1].id * 1 + 1,\r\n                message: action.newMessageBody,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [ ...state.messages, newMessage ]\r\n            };\r\n\r\n        default :\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\n/* Action Creator */\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__301iD\"};","module.exports = __webpack_public_path__ + \"static/media/user-icon.7aea9cc8.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader-colorfull.45cc5273.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader-colorfull.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <div style={ {position: 'absolute', left: '50%', top: '50%'} } ><img src={preloader} alt=\"image\"/></div>\r\n}\r\n\r\nexport default Preloader;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport classes from './Sidebar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <aside className={classes.sidebar}>\r\n            <ul className={classes.sidebar__list}>\r\n                <li className={classes.sidebar__list_item}>\r\n                    <NavLink to=\"/profile\" className={classes.sidebar__link} activeClassName={classes.activeLink}>Profile</NavLink>\r\n                </li>\r\n                <li className=\"app-sidebar__list-item\">\r\n                    <NavLink to=\"/dialogs\" className={classes.sidebar__link} activeClassName={classes.activeLink}>Messages</NavLink>\r\n                </li>\r\n                <li className=\"app-sidebar__list-item\">\r\n                    <NavLink to=\"/games\" className={classes.sidebar__link} activeClassName={classes.activeLink}>Games</NavLink>\r\n                </li>\r\n                <li className=\"app-sidebar__list-item\">\r\n                    <NavLink to=\"/news\" className={classes.sidebar__link} activeClassName={classes.activeLink}>News</NavLink>\r\n                </li>\r\n                <li className=\"app-sidebar__list-item\">\r\n                    <NavLink to=\"/music\" className={classes.sidebar__link} activeClassName={classes.activeLink}>Music</NavLink>\r\n                </li>\r\n                <li className=\"app-sidebar__list-item\">\r\n                    <NavLink to=\"/users\" className={classes.sidebar__link} activeClassName={classes.activeLink}>Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map( u => {\r\n        if( u[objPropName] === itemId ){\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    } )\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                // users: state.users.map( u => {\r\n                //     if( u.id === action.userId ){\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u;\r\n                // } )\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId ]\r\n                    : state.followingInProgress.filter( id=> id != action.userId )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n/* Action Creators */\r\nexport const followSuccess   = (userId) => ({ type: FOLLOW, userId: userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId: userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching: isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch( toggleIsFetching(true) );\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch( toggleIsFetching(false) );\r\n        dispatch( setUsers(data.items) );\r\n        dispatch( setTotalUsersCount(data.totalCount) );\r\n        dispatch( setCurrentPage(page) );\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber -1) * portionSize +1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator }>\r\n            { portionNumber > 1 &&\r\n                <button onClick={ ()=>{ setPortionNumber(portionNumber -1 ) } }>PREV</button>}\r\n\r\n                { pages\r\n                .filter( p => p >= leftPortionPageNumber && p<= rightPortionPageNumber )\r\n                .map((p, index) => {\r\n                return <span\r\n                    key={index}\r\n                    className={ cn( { [styles.selectedPage]: currentPage === p }, styles.pageLink) }\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}\r\n                >{p}</span>\r\n            })}\r\n\r\n            { portionCount > portionNumber &&\r\n                <button onClick={ ()=>{ setPortionNumber(portionNumber + 1 ) } }>NEXT</button>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user-icon.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <span className='avo-follow'>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\"\r\n                             className={styles.usersPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id=> id === user.id)}\r\n                                  onClick={() => {\r\n                            unfollow( user.id );\r\n                        }}> Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id=> id === user.id)}\r\n                                  onClick={() => {\r\n                            follow( user.id );\r\n                        }}> Follow</button>}\r\n\r\n                </div>\r\n            </span>\r\n\r\n            <span>\r\n                <span>\r\n                    <div> {user.name} </div>\r\n                    <div> {user.status} </div>\r\n                    <br/>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage,  totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} pageSize={pageSize}\r\n                       totalItemsCount={totalUsersCount} onPageChanged={onPageChanged} />\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     key={u.id}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     follow={props.follow}\r\n                                     unfollow={props.unfollow} /> )\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector( getUsersSelector, (users) => {\r\n    return users.filter( u => true );\r\n});\r\n\r\nexport const getUsersSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage, toggleFollowingProgress,\r\n    unfollow,\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getTotalUsersCount, getUsers,\r\n    getUsersSize\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render () {\r\n        let pagesCount = Math.ceil( this.props.totalUsersCount / this.props.pageSize );\r\n        let pages = [];\r\n        for(let i=1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n\r\n        return ( <>\r\n            { this.props.isFetching ? <Preloader/> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </> )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getUsersSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default connect ( mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers: requestUsers\r\n} )( UsersContainer );","import React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.header__row}>\r\n                <p className={classes.header__logo} >\r\n                    <img src=\"https://loremflickr.com/150/150/rio\" />\r\n                </p>\r\n                <h1 className={classes.header__title}>\r\n                    Socials Network\r\n                </h1>\r\n                <div className={classes.loginBlock}>\r\n                    { props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                        : <NavLink to={'/login'}>Login</NavLink> }\r\n\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n/* Action Creators */\r\nexport const setAuthUserData = (userId, email, login, isAuth) => (\r\n    { type: SET_USER_DATA, payload: {userId, email, login, isAuth } }\r\n);\r\n\r\n/* Thunk creator */\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if ( response.data.resultCode === 0 ){\r\n        // Destructuring assignment (Destructurization) will create 3 vars userId, login, email\r\n        let { id, email, login } = response.data.data;\r\n        dispatch( setAuthUserData( id, email, login, true ) );\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if ( response.data.resultCode === 0 ){\r\n        dispatch(getAuthUserData())\r\n    }else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit(\"login\", { _error: message}));\r\n    }\r\n\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if ( response.data.resultCode === 0 ){\r\n        dispatch( setAuthUserData( null, null, null, false ) );\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {CreateField, Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormControls/FormControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        { CreateField('Email', 'email', [required], Input ) }\r\n\r\n        { CreateField('Password', 'password', [required], Input, {type: 'password'} ) }\r\n\r\n        { CreateField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'Remember me' ) }\r\n\r\n        { error && <div className={style.formSummeryError}>{error}</div>}\r\n\r\n        <p> <button>Login</button></p>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm( { form: 'login' }) (LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default connect (mapStateToProps, { login }) (Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n/* Action Creators */\r\nexport const initializedSuccess = () => (\r\n    { type: INITIALIZED_SUCCESS }\r\n);\r\n\r\n/* Thunk creator */\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then( () => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n};\r\n\r\nexport default appReducer;\r\n\r\n","\r\nlet initialState = {};\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\n/* With chrome tool redux store */\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n/* Without chrome tool redux store */\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n/* TODO: For debug only */\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/reduxStore\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n\nconst GamesPage = () => {\n    return (\n        <p>\n            <iframe src=\"https://scratch.mit.edu/projects/149636497/embed\" allowTransparency=\"true\" width=\"485\" height=\"402\"\n                    frameBorder=\"0\" scrolling=\"no\" allowFullScreen></iframe>\n        </p>\n    )\n}\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if ( !this.props.initialized ) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"App\">\n                <HeaderContainer/>\n                <div className=\"app-row\">\n                    <Sidebar/>\n                    <div className=\"app-main\">\n                        <Route path='/dialogs' render={() => {\n                            return <React.Suspense fallback={<Preloader/>}>\n                                <DialogsContainer/>\n                            </React.Suspense>\n                        }}/>\n                        {/*Same action with my hoc*/}\n                        <Route path='/profile/:userId?' render={ withSuspense(ProfileContainer) }/>\n                        <Route path='/users/' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <LoginPage/>}/>\n                        <Route path='/games' render={() => <GamesPage/>}/>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect( mapStateToProps, {initializeApp})\n) (App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n    </BrowserRouter>\n}\nexport default SamuraiJSApp;\n","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SamuraiJSApp from \"./App\";\n\n\n\nReactDOM.render( <SamuraiJSApp/>, document.getElementById('root') );\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children }) => {\r\n    let hasError = touched && error;\r\n    return (\r\n        <div className={ styles.formGroup + (hasError ? ' ' + styles.error: '') }>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span className=\"errorMessage\"> {error} </span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <textarea {...input } {...restProps }/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <input {...input } {...restProps }/></FormControl>\r\n}\r\n\r\n// export const Input = ({input, meta, ...props}) => {\r\n//     let hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={ styles.formGroup + (hasError ? ' ' + styles.error: '') }>\r\n//             <div>\r\n//                 <input {...input} {...props} />\r\n//             </div>\r\n//             <div>\r\n//                 { hasError && <span className=\"errorMessage\"> {meta.error} </span> }\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props= {}, text = '' ) => (\r\n    <div>\r\n        <Field component={component} name={name} placeholder={placeholder}\r\n               validate={validators} {...props} /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1NPud\",\"header__row\":\"Header_header__row__3Ls5N\",\"header__logo\":\"Header_header__logo__12K5d\",\"header__title\":\"Header_header__title__27myD\",\"loginBlock\":\"Header_loginBlock__24EM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"FormControls_formGroup__3hnQZ\",\"error\":\"FormControls_error__h5uak\",\"formSummeryError\":\"FormControls_formSummeryError__7vv1u\"};","\r\nexport const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2luxR\",\"selectedPage\":\"Paginator_selectedPage__1lu3D\",\"pageLink\":\"Paginator_pageLink__1qSeI\"};","/* Action Types, or action types constants*/\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE;';\r\nconst SET_STATUS = 'SET_STATUS;';\r\nconst DELETE_POST = 'DELETE_POST;';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you doing?', likesCount: 12},\r\n        {id: 2, message: 'Pretty good', likesCount: 5},\r\n        {id: 3, message: 'I\\'m great!', likesCount: 3},\r\n        {id: 4, message: 'Lets have fun', likesCount: 1},\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.posts[state.posts.length - 1].id * 1 + 1,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE : {\r\n            return {...state, profile: action.profile }\r\n        }\r\n\r\n        case SET_STATUS : {\r\n            return {...state, status: action.status }\r\n        }\r\n\r\n        case DELETE_POST : {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/* Action Creators */\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile: profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch( setUserProfile(response.data) );\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = profileAPI.getStatus(userId);\r\n    dispatch( setStatus(response.data) );\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = profileAPI.updateStatus(status);\r\n    if( response.data.resultCode === 0) {\r\n        dispatch( setStatus(status) );\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n\r\n"],"sourceRoot":""}